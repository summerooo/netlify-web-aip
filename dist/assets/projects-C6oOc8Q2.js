import{s}from"./index-1yu-MD6X.js";async function g(){try{const{data:{user:t},error:r}=await s.auth.getUser();if(r)throw r;if(!t)throw new Error("用户未登录");const{data:e,error:i}=await s.from("project_members").select("project_id, role").eq("user_id",t.id);if(i)throw i;if(!e||e.length===0)return[];const c=e.map(o=>o.project_id),{data:d,error:a}=await s.from("projects").select(`
        *,
        organizations (name)
      `).in("id",c);if(a)throw a;return(d||[]).map(o=>{var m;const n=e.find(u=>u.project_id===o.id);let f=(n==null?void 0:n.role)||"member";return o.created_by===t.id&&(f="creator"),{...o,user_role:f,organization_name:((m=o.organizations)==null?void 0:m.name)||"未知组织"}})}catch(t){throw console.error("获取用户项目失败:",t),t}}async function p(t){const{data:r,error:e}=await s.from("projects").select("*").eq("organization_id",t);if(e)throw e;return r||[]}async function h(t){const{data:r,error:e}=await s.from("projects").insert({name:t.name,description:t.description,status:t.status,organization_id:t.organization_id,created_by:t.created_by}).select().single();if(e)throw e;return r}async function j(t){const{data:r,error:e}=await s.from("projects").select("*").eq("id",t).single();if(e)throw e;return r}async function y(t,r){const{data:e,error:i}=await s.from("projects").update(r).eq("id",t).select().single();if(i)throw i;return e}async function E(t){const{data:r,error:e}=await s.from("project_members").select("*").eq("project_id",t);if(e)throw e;if(!r||r.length===0)return[];const i=r.map(o=>o.user_id);let c=[];try{const{data:o,error:n}=await s.from("user_profiles").select("id, full_name, email").in("id",i);!n&&o&&(c=o)}catch(o){console.warn("获取用户资料失败，使用默认值:",o)}const{data:d,error:a}=await s.from("tasks").select("assigned_to").eq("project_id",t);a&&console.warn("获取项目任务失败:",a);const l=r.map(o=>{const n=c==null?void 0:c.find(w=>w.id===o.user_id),f=(n==null?void 0:n.full_name)||(n!=null&&n.email?n.email.split("@")[0]:null)||`用户-${o.user_id.substring(0,8)}`,m=(n==null?void 0:n.email)||o.user_id,u=(d==null?void 0:d.filter(w=>w.assigned_to===o.user_id).length)||0;return{id:o.id,user_id:o.user_id,role:o.role,name:f,email:m,joined_at:o.created_at,taskCount:u}});return console.log(l,"membersWithProfiles"),l}async function q(t,r){const{error:e}=await s.from("project_members").delete().eq("project_id",t).eq("user_id",r);if(e)throw e}async function b(t){const{data:r,error:e}=await s.from("tasks").select("*").eq("project_id",t).order("created_at",{ascending:!1});if(e)throw e;const i=[...new Set((r||[]).map(a=>a.assigned_to).filter(Boolean))];let c=[];if(i.length>0)try{const{data:a,error:l}=await s.from("user_profiles").select("id, full_name, email").in("id",i);!l&&a&&(c=a)}catch(a){console.warn("获取分配用户资料失败，使用默认值:",a)}return(r||[]).map(a=>{let l=null;if(a.assigned_to){const o=c.find(n=>n.id===a.assigned_to);l={display_name:(o==null?void 0:o.full_name)||(o!=null&&o.email?o.email.split("@")[0]:null)||`用户-${a.assigned_to.substring(0,8)}`,full_name:o==null?void 0:o.full_name,email:o==null?void 0:o.email,id:a.assigned_to}}return{...a,assigned_user:l}})}async function v(t){const{data:{user:r},error:e}=await s.auth.getUser();if(e||!r)throw new Error("用户未登录");const{data:i,error:c}=await s.from("project_members").select("id").eq("project_id",t.project_id).eq("user_id",r.id).limit(1);if(c||!i||i.length===0)throw new Error("您不是该项目的成员，无法创建任务");let d={...t};if(t.assigned_to){const{data:o,error:n}=await s.from("project_members").select("id").eq("project_id",t.project_id).eq("user_id",t.assigned_to).limit(1);(n||!o||o.length===0)&&(console.log("分配的用户不是项目成员，创建未分配任务"),d.assigned_to=void 0)}const{data:a,error:l}=await s.from("tasks").insert(d).select();if(l)throw l;return Array.isArray(a)?a[0]:a}async function z(t){try{const{data:r,error:e}=await s.from("project_invitations").select("*").eq("token",t).single();if(e)throw e;if(new Date(r.expires_at)<new Date)throw new Error("邀请已过期");const{data:i}=await s.from("projects").select("name").eq("id",r.project_id).single();let c="系统邀请";if(r.invited_by){const{data:d}=await s.from("user_profiles").select("email").eq("user_id",r.invited_by).single();c=(d==null?void 0:d.email)||"系统邀请"}return{projectId:r.project_id,projectName:(i==null?void 0:i.name)||"未知项目",email:r.email,inviterEmail:c,role:r.role}}catch(r){throw console.error("获取邀请详情失败:",r),r}}async function U(t,r){var e;try{const{data:{user:i},error:c}=await s.auth.getUser();if(c)throw c;if(!i)throw new Error("用户未登录");const{data:d,error:a}=await s.from("project_invitations").select("*").eq("token",t).eq("project_id",r).single();if(a)throw a;if(new Date(d.expires_at)<new Date)throw new Error("邀请已过期");if(d.email&&d.email.toLowerCase()!==((e=i.email)==null?void 0:e.toLowerCase()))throw new Error(`此邀请是发送给 ${d.email} 的，请使用正确的账号登录后再接受邀请`);const{data:l}=await s.from("project_members").select("id").eq("project_id",r).eq("user_id",i.id).single();if(l)return{success:!0,message:"您已经是该项目的成员"};const{error:o}=await s.from("project_members").insert({project_id:r,user_id:i.id,role:d.role});if(o)throw o;return await s.from("project_invitations").delete().eq("token",t),{success:!0,message:"成功加入项目"}}catch(i){throw console.error("接受邀请失败:",i),i}}async function k(t){try{const{data:{user:r},error:e}=await s.auth.getUser();if(e)throw e;if(!r)throw new Error("用户未登录");const{data:i,error:c}=await s.from("projects").select("*").eq("id",t).single();if(c)throw c;if(!i)throw new Error("项目不存在");const d=i.created_by===r.id;let a=!1;if(!d){const{data:n}=await s.from("organization_members").select("role").eq("organization_id",i.organization_id).eq("user_id",r.id).single();a=(n==null?void 0:n.role)==="admin"}let l=!1;if(!d&&!a){const{data:n}=await s.from("organizations").select("created_by").eq("id",i.organization_id).single();l=(n==null?void 0:n.created_by)===r.id}if(!d&&!a&&!l)throw new Error("只有项目创建者或组织管理员才能删除项目");const{error:o}=await s.from("projects").delete().eq("id",t);if(o)throw console.error("删除项目失败:",o),new Error("删除项目失败，可能由于权限限制");return console.log("项目删除成功"),{success:!0}}catch(r){throw console.error("删除项目失败:",r),r}}async function A(t,r){try{const{data:e,error:i}=await s.from("tasks").update({status:r,updated_at:new Date().toISOString()}).eq("id",t).select();if(i)throw i;return console.log("任务状态更新成功:",e),e[0]}catch(e){throw console.error("更新任务状态失败:",e),e}}async function S(t,r){try{const{data:e,error:i}=await s.from("tasks").update({assigned_to:r,updated_at:new Date().toISOString()}).eq("id",t).select();if(i)throw i;return console.log("任务负责人更新成功:",e),e[0]}catch(e){throw console.error("更新任务负责人失败:",e),e}}async function I(t,r=20){try{const{data:e,error:i}=await s.from("project_activities").select("*").eq("project_id",t).order("created_at",{ascending:!1}).limit(r);if(i)return console.warn("获取项目活动失败，可能是表不存在:",i),[];if(!e||e.length===0)return[];const c=[...new Set(e.map(a=>a.user_id).filter(Boolean))];let d=[];if(c.length>0)try{const{data:a}=await s.from("user_profiles").select("id, full_name, email").in("id",c);d=a||[]}catch(a){console.warn("获取用户资料失败:",a)}return e.map(a=>{const l=d.find(o=>o.id===a.user_id);return{...a,user_name:(l==null?void 0:l.full_name)||(l!=null&&l.email?l.email.split("@")[0]:null)||"未知用户"}})}catch(e){return console.warn("获取项目活动失败:",e),[]}}async function W(t,r,e="general"){try{const{data:{user:i}}=await s.auth.getUser();if(!i)return;const{error:c}=await s.from("project_activities").insert({project_id:t,user_id:i.id,description:r,activity_type:e});c&&console.warn("创建项目活动记录失败:",c)}catch(i){console.warn("创建项目活动记录失败:",i)}}export{g as a,j as b,h as c,E as d,b as e,I as f,p as g,v as h,W as i,k as j,A as k,S as l,z as m,U as n,q as r,y as u};
